<%= render :partial => 'docflows/head' %>

<% if @category.errors.any? %>
  <div id="error_explanation" class="flash error">
    <h4><%= pluralize(@category.errors.count, "error")+l(:label_docflow_errors_found) %> </h4>
    <ul>
    <% @category.errors.full_messages.each do |msg| %>
      <li><%= msg %></li>
    <% end %>
    </ul>
  </div>
<% end %>

<%= fields_for @category do |ff|%>
  <p>
    <%= ff.label l(:label_docflow_parent_category) %>
    <%  childs_list = []
        @category.self_and_descendants.each{|ch| childs_list << ch.id } %>
    <%= ff.select( :parent_id,
                   nested_set_options(DocflowCategory) {|i| "#{'..' * i.level} #{i.name}" }.unshift(["",""]),
                   {:disabled => childs_list},
                   {:class=>"w100"} ) %>
  </p>

  <p>
    <%= ff.label l(:label_docflow_title) %>
    <%= ff.text_field :name, :required => true  %>
  </p>

  <p>
    <%= ff.label l(:label_docflow_editor_department) %>
    <%= ff.collection_select(:editor_department_id, UserDepartment.all.sort_by{|dep| dep.name }, :id, :name) %>
  </p>

  <p>
    <%= ff.label l(:label_docflow_editor_title) %>
    <%= ff.collection_select(:editor_title_id, UserTitle.all.sort_by{|title| title.name }, :id, :name) %>
  </p>

  <p>
    <% approvers = Group.find(Setting.plugin_docflows['approve_allowed_to']) %>
    <%= ff.label l(:label_docflow_default_approver) %>
    <%= ff.collection_select(:default_approver_id, approvers.users.sort_by{|user| user.name }, :id, :name) %>
  </p>

<% end %>